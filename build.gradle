import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'java'
    id 'io.spring.dependency-management' version "1.1.0"
    id 'org.springframework.boot' version '2.7.8'
    id 'pl.allegro.tech.build.axion-release' version '1.14.3'
    id 'com.palantir.docker' version '0.34.0'
    id 'com.palantir.docker-run' version '0.34.0'
    id 'jp.classmethod.aws.reboot.cloudformation' version '0.45'
}

version = "0.0.1"


repositories {
    mavenCentral()

}

processResources.dependsOn('frontend:build')

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-devtools"
    implementation 'javax.validation:validation-api'

    implementation("com.h2database:h2:2.1.212")
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "junit:junit:4.11"


}

test{
    useJUnitPlatform()
}

String dockerHubUsernameProperty = findProperty('dockerHubUsername') ?: 'ismaelcontrast'
String imageName = "${dockerHubUsernameProperty}/spring-boot-crud-operation:$version"

docker {
    name imageName
    files "build/libs/${bootJar.archiveFileName.get()}"
    buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
    tag 'DockerHub', imageName
}



String group = "999"
dockerRun {
    name 'spring-boot-operation'
    image imageName
    ports '8080:8080'
    clean true
  //  daemonize false
   // arguments '-v', '/var/run/docker.sock:/var/run/docker.sock', '--group-add', group
}

cloudFormation {
    stackName "$project.name-stack"
    stackParams([
            SubnetID: findProperty('subnetId') ?: '',
            ServiceName: project.name,
            ServiceVersion: project.version,
            DockerHubUsername: "ismaelcontrast"
    ])
    templateFile project.file("ecs.yml")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

jar {

    manifest {
        attributes  'Main-Class': 'com.ishmael.springbootcrudoperation.SpringBootCrudOperationApplication'

    }
    baseName = 'spring-angular'
    version = '0.0.1-SNAPSHOT'
    from('frontend/dist/angular-frontend-books') {
        into 'public'
    }
}



bootJar {
    enabled = true
}


